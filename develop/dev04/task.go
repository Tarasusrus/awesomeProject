package main

import (
	"fmt"
	"sort"
)

/*
=== Поиск анаграмм по словарю ===

Напишите функцию поиска всех множеств анаграмм по словарю.
Например:
'пятак', 'пятка' и 'тяпка' - принадлежат одному множеству,
'листок', 'слиток' и 'столик' - другому.

Входные данные для функции: ссылка на массив - каждый элемент которого - слово на русском языке в кодировке utf8.
Выходные данные: Ссылка на мапу множеств анаграмм.
Ключ - первое встретившееся в словаре слово из множества
Значение - ссылка на массив, каждый элемент которого, слово из множества. Массив должен быть отсортирован по возрастанию.
Множества из одного элемента не должны попасть в результат.
Все слова должны быть приведены к нижнему регистру.
В результате каждое слово должно встречаться только один раз.

Программа должна проходить все тесты. Код должен проходить проверки go vet и golint.
*/
var dict map[string]string

func dictionarySearchForAnagrams(words []string) map[string]string {
	dict = make(map[string]string)
	for _, word := range words {
		runes := []rune(word)
		sort.Slice(runes, func(i, j int) bool { return runes[i] < runes[j] })
		sortedWord := string(runes)
		dict[sortedWord] = word

	}
	return dict
}
func main() {
	words := []string{
		"пятак", "пятка", "тяпка", "листок", "слиток", "столик",
		"распорка", "карпорас", "поток", "топок", "вотка", "тавок",
		"простоквашина", "кашинастропов", "винастропкашипро", "боб", "обб",
		"банка", "набка", "нож", "жон", "карта", "трак", "ракт", "сакр",
		"дверь", "ревд", "ведр", "дорога", "город", "рогод", "орогд",
		"кабина", "бакина", "абник", "кибан", "никаб",
		"плов", "повл", "овпл", "лпов", "вопл",
		"термин", "метрин", "ринмет", "тимерн", "митрен",
		"лапа", "пала", "алап", "апал", "паал",
	}
	dict = dictionarySearchForAnagrams(words)
	for key, value := range dict {
		fmt.Println(key, value)
	}

}
